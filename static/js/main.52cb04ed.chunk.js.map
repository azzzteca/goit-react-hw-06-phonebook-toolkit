{"version":3,"sources":["components/App/App.module.css","components/redux/contacts-actions.js","components/redux/contacts-reduser.js","components/redux/contacts-store.js","components/Section/Section.jsx","components/hooks/useLocalStoraje.js","components/InputForm/InputForm.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/App/App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContact","itemsInitialState","itemsReducer","createReducer","actions","state","find","contact","toLowerCase","alert","newContact","filter","filterReducer","_","contactsReducer","combineReducers","items","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","Section","title","children","className","useLocalStorage","defaultValue","useState","JSON","parse","window","localStorage","getItem","setState","useEffect","setItem","stringify","InputForm","setName","setNumber","inputChange","evt","target","value","dispatch","useDispatch","onSubmit","preventDefault","reset","onChange","type","pattern","required","Filter","ContactListItem","onClick","ContactList","useSelector","includes","map","App","s","app","length","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.52cb04ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3iPeU\"};","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add', ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nexport const deleteContact = createAction('contacts/delete');\n\nexport const filterContact = createAction('contacts/filter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './contacts-actions';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst itemsInitialState = [\n  { id: uuidv4(), name: 'Rosie Simpson', number: '459-12-56' },\n  { id: uuidv4(), name: 'Hermione Kline', number: '443-89-12' },\n  { id: uuidv4(), name: 'Eden Clements', number: '645-17-79' },\n  { id: uuidv4(), name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst itemsReducer = createReducer(itemsInitialState, {\n  [actions.addContact]: (state, { payload }) => {\n    const doubleContact = state.find(\n      contact => payload.name.toLowerCase() === contact.name.toLowerCase(),\n    );\n\n    if (doubleContact) {\n      alert(`${payload.name} is alredy in contacts`);\n      return state;\n    }\n\n    const newContact = {\n      id: uuidv4(),\n      name: payload.name,\n      number: payload.number,\n    };\n\n    return [...state, newContact];\n  },\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [actions.filterContact]: (_, { payload }) => payload.toLowerCase(),\n});\n\nexport const contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { contactsReducer } from './contacts-reduser';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst contactsPersistConfig = {\n  key: 'items',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import PropTypes from 'prop-types';\r\n\r\nexport function Section({ title, children }) {\r\n  return (\r\n    <div className=\"section\">\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import { useState, useEffect } from 'react';\n\nexport function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n","import PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actions from '../redux/contacts-actions';\r\nimport { useLocalStorage } from '../hooks/useLocalStoraje';\r\nimport s from './InputForm.module.css';\r\n\r\nexport function InputForm() {\r\n  const [name, setName] = useLocalStorage('name', '');\r\n  const [number, setNumber] = useLocalStorage('number', '');\r\n\r\n  const inputChange = evt => {\r\n    const { name, value } = evt.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  let dispatch = useDispatch();\r\n\r\n  const handleFormSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    dispatch(actions.addContact({ name, number }));\r\n    setName('');\r\n    setNumber('');\r\n    evt.target.reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          onChange={inputChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Number\r\n        <input\r\n          onChange={inputChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nInputForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actions from '../redux/contacts-actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport function Filter() {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        onChange={evt => dispatch(actions.filterContact(evt.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  info: PropTypes.shape({\r\n    contacts: PropTypes.array,\r\n  }),\r\n  filterContact: PropTypes.func.isRequired,\r\n};\r\n","import { useDispatch } from 'react-redux';\r\nimport * as actions from '../redux/contacts-actions';\r\n\r\nexport function ContactListItem({ contact }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      {contact.name} {contact.number}\r\n      <button\r\n        type=\"button\"\r\n        id={contact.id}\r\n        onClick={evt => dispatch(actions.deleteContact(evt.target.id))}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\r\n\r\nexport function ContactList({ children }) {\r\n  const contacts = useSelector(state => state.contacts.items);\r\n  const filter = useSelector(state => state.contacts.filter);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Contacts</h2>\r\n      {children}\r\n      <ul>\r\n        {!filter\r\n          ? contacts.map(contact => (\r\n              <li key={uuidv4()}>\r\n                <ContactListItem contact={contact} />\r\n              </li>\r\n            ))\r\n          : contacts\r\n              .filter(contact => contact.name.toLowerCase().includes(filter))\r\n              .map(contact => (\r\n                <li key={contact.id}>\r\n                  <ContactListItem contact={contact} />\r\n                </li>\r\n              ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  filter: PropTypes.string,\r\n  deleteContact: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n","import { useSelector } from 'react-redux';\nimport { Section } from '../Section/Section.jsx';\nimport { InputForm } from '../InputForm/InputForm.jsx';\nimport { Filter } from '../Filter/Filter.jsx';\nimport { ContactList } from '../ContactList/ContactList.jsx';\nimport s from './App.module.css';\n\nexport function App() {\n  const contacts = useSelector(state => state.contacts.items);\n  return (\n    <div className={s.app}>\n      <Section title={'Phonebook'}>\n        <InputForm />\n\n        <ContactList>{contacts.length > 2 && <Filter />}</ContactList>\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './components/redux/contacts-store';\nimport './index.css';\nimport { App } from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}