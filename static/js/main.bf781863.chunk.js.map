{"version":3,"sources":["components/App/App.module.css","components/redux/contacts-actions.js","components/redux/contacts-reduser.js","components/redux/contacts-store.js","components/Section/Section.jsx","components/hooks/useLocalStoraje.js","components/InputForm/InputForm.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/App/App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContact","itemsInitialState","itemsReducer","createReducer","actions","state","filter","contact","filterReducer","_","toLowerCase","contactsReducer","combineReducers","items","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","Section","title","children","className","useLocalStorage","defaultValue","useState","JSON","parse","window","localStorage","getItem","setState","useEffect","setItem","stringify","connect","dispatch","setName","setNumber","inputChange","evt","target","value","onSubmit","preventDefault","reset","onChange","type","pattern","required","onClick","includes","map","s","app","length","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.bf781863.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3iPeU\"};","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add', ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nexport const deleteContact = createAction('contacts/delete');\n\nexport const filterContact = createAction('contacts/filter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './contacts-actions';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst itemsInitialState = [\n  { id: uuidv4(), name: 'Rosie Simpson', number: '459-12-56' },\n  { id: uuidv4(), name: 'Hermione Kline', number: '443-89-12' },\n  { id: uuidv4(), name: 'Eden Clements', number: '645-17-79' },\n  { id: uuidv4(), name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst itemsReducer = createReducer(itemsInitialState, {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [actions.filterContact]: (_, { payload }) => payload.toLowerCase(),\n});\n\nexport const contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport { contactsReducer } from './contacts-reduser';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst contactsPersistConfig = {\n  key: 'items',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import PropTypes from 'prop-types';\r\n\r\nexport function Section({ title, children }) {\r\n  return (\r\n    <div className=\"section\">\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import { useState, useEffect } from 'react';\n\nexport function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../redux/contacts-actions';\r\nimport { useLocalStorage } from '../hooks/useLocalStoraje';\r\nimport s from './InputForm.module.css';\r\n\r\nfunction InputForm({ addContact }) {\r\n  const [name, setName] = useLocalStorage('name', '');\r\n  const [number, setNumber] = useLocalStorage('number', '');\r\n\r\n  const inputChange = evt => {\r\n    const { name, value } = evt.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    addContact({ name, number });\r\n    setName('');\r\n    setNumber('');\r\n    evt.target.reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          onChange={inputChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Number\r\n        <input\r\n          onChange={inputChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nInputForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContact: ({ name, number }) =>\r\n    dispatch(actions.addContact({ name, number })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(InputForm);\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../redux/contacts-actions';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ filterContact }) {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input type=\"text\" onChange={filterContact} />\r\n    </label>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  filterContact: evt => dispatch(actions.filterContact(evt.target.value)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  info: PropTypes.shape({\r\n    contacts: PropTypes.array,\r\n  }),\r\n  filterContact: PropTypes.func.isRequired,\r\n};\r\n","import { connect } from 'react-redux';\r\nimport * as actions from '../redux/contacts-actions';\r\n\r\nfunction ContactListItem({ contact, deleteContact }) {\r\n  return (\r\n    <>\r\n      {contact.name} {contact.number}\r\n      <button type=\"button\" id={contact.id} onClick={deleteContact}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: evt => dispatch(actions.deleteContact(evt.target.id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactListItem);\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nfunction ContactList({ contacts, filter, children }) {\r\n  return (\r\n    <div>\r\n      <h2>Contacts</h2>\r\n      {children}\r\n      <ul>\r\n        {!filter\r\n          ? contacts.map(contact => (\r\n              <li key={uuidv4()}>\r\n                <ContactListItem contact={contact} />\r\n              </li>\r\n            ))\r\n          : contacts\r\n              .filter(contact => contact.name.toLowerCase().includes(filter))\r\n              .map(contact => (\r\n                <li key={contact.id}>\r\n                  <ContactListItem contact={contact} />\r\n                </li>\r\n              ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  filter: PropTypes.string,\r\n  deleteContact: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n","import { connect } from 'react-redux';\nimport { Section } from '../Section/Section.jsx';\nimport InputForm from '../InputForm/InputForm.jsx';\nimport Filter from '../Filter/Filter.jsx';\nimport ContactList from '../ContactList/ContactList.jsx';\nimport s from './App.module.css';\n\nfunction App({ contacts }) {\n  return (\n    <div className={s.app}>\n      <Section title={'Phonebook'}>\n        <InputForm />\n\n        <ContactList>{contacts.length > 2 && <Filter />}</ContactList>\n      </Section>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './components/redux/contacts-store';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}